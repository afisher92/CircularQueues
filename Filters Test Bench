module Filters_tb();

reg clk;
reg [12:0] addr;
reg [15:0]audio_in,audio_out;
reg [15:0] scoobydoo[8191:0];

integer file,i;

// Call Nate and Brandon's filters code //
//Filters iDUT(.clk(clk),.rst_n(rst_n),.SDOUT(SDOUT));

test_filters iPoot(.clk(clk),.audio_in(audio_in),.audio_out(audio_out));

initial begin
    clk = 0;
    i = 0;
    $readmemh("audio_in.dat",scoobydoo); // Open the file once at the beginning //
    file = $fopen("results.csv");
end

// Read from audio_in for data //
always @(posedge clk) begin  
  audio_in <= scoobydoo[i]; // Write the ith line of the file to audio_in //
  i = i + 1;
  $fdisplay(file,audio_out); // Gets two x datas, needs to be corrected //
end

// Close file when all samples are written //
always @(posedge clk) begin  
if (i == 8192) begin // Should be fixed to any file length, not hard coded //
 $fclose(file);
end
end

// Clock //
always begin
 #5 clk = ~clk;
end


endmodule
